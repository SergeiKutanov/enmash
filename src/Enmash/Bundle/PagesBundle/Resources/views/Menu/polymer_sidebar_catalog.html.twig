{% extends 'knp_menu.html.twig' %}

{% macro attributes(attributes) %}
    {% for name, value in attributes %}
        {%- if value is not none and value is not sameas(false) -%}
            {{- ' %s="%s"'|format(name, value is sameas(true) ? name|e : value|e)|raw -}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}

{% block root %}
    {% set listAttributes = item.childrenAttributes %}

    <script>
        $(document).ready(function(){
//            $('core-submenu').click(function(e){
//                e.preventDefault();
//                console.log(e.target);
//            });
//
//            $('core-submenu:before').click(function(e){
//                e.preventDefault();
//                console.log(e.target);
//            });
        });
    </script>

    <core-menu>
        {#{{ block('list') -}}#}
        {% set currentItem = item %}
        {% for item in currentItem.children %}
            {% if item.hasChildren %}
                <core-submenu label="{{ item.label }}" class="menu-item">
                    <core-item label="{{ item.label }}" class="core-selected" active>
                        <a href="{{ item.uri }}"></a>
                    </core-item>
                    {% set secondLevelItem = item %}
                    {% for secondLevelIterItem in secondLevelItem %}
                        {% if secondLevelIterItem.hasChildren %}
                            <core-submenu label="{{ secondLevelIterItem.label }}" class="menu-item">
                                <core-item label="{{ secondLevelIterItem.label }}" class="core-selected" active>
                                    <a href="{{ secondLevelIterItem.uri }}"></a>
                                </core-item>
                                {% for thirdLevelItem in secondLevelIterItem %}
                                <core-item label="{{ thirdLevelItem.label }}" class="menu-item">
                                    <a href="{{ thirdLevelItem.uri }}"></a>
                                </core-item>
                                {% endfor %}
                            </core-submenu>
                        {% else %}
                        <core-item label="{{ secondLevelIterItem.label }}" class="menu-item">
                            <a href="{{ secondLevelIterItem.uri }}"></a>
                        </core-item>
                        {% endif %}
                    {% endfor %}
                </core-submenu>
            {% else %}
                <core-item label="{{ block('label') }}" class="menu-item">
                    <a href="{{ item.uri }}"></a>
                </core-item>
            {% endif %}
        {% endfor %}
    </core-menu>

{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {{ block('children') }}
    {% endif %}
{% endblock %}

{% block children %}
    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = currentOptions|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}
    <core-submenu>
        <core-item label="{{ block('label') }}" class="has-children"></core-item>
        {% for item in currentItem.children %}
            {{ block('item') }}
        {% endfor %}
    </core-submenu>

    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if item.current %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif item.currentAncestor %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}
        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}

        {#{% if item.hasChildren %}#}
            {#<core-submenu>#}
                {#<core-item label="{{ block('label') }}" class="has-children">{{ block('linkElement') }}</core-item>#}
                {#{{ block('list') }}#}
            {#</core-submenu>#}
        {#{% else %}#}
            <core-item label="{{ block('label') }}">{{ block('label') }}</core-item>
        {#{% endif %}#}

        {#<core-item{{ _self.attributes(attributes) }} label="{{ block('label') }}">#}
            {#{%- if item.uri is not empty and (not item.current or options.currentAsLink) %}#}
                {#{{ block('linkElement') }}#}
            {#{%- else %}#}
                {#{{ block('spanElement') }}#}
            {#{%- endif %}#}
            {#{# render the list of children#}#}
            {#{%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}#}
            {#{%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}#}
            {#{%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}#}
            {#{{ block('list') }}#}
        {#</core-item>#}
    {% endif %}
{% endblock %}

{% block linkElement %}<a href="{{ item.uri }}"{{ _self.attributes(item.linkAttributes) }}></a>{% endblock %}