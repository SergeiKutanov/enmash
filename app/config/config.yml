imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    # pages bundle admin entities
    - { resource: @EnmashPagesBundle/Resources/config/services.yml  }
    # store bundle admin entities
    - { resource: @EnmashStoreBundle/Resources/config/services.yml  }
    # user bundle admin entities
#    - { resource: @EnmashUserControlBundle/Resources/config/services.yml  }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    form:
        resources:
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
            - 'SonataCoreBundle:Form:datepicker.html.twig'
            - 'SonataFormatterBundle:Form:formatter.html.twig'
    globals:
        sorted_stores: '@enmash_pages.store.sortedStores'
        catalog_in_dev: true

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:
        - EnmashPagesBundle
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        options:
            1002:  "SET NAMES UTF8"
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        dql:
            string_functions:
                cast: Oro\ORM\Query\AST\Functions\Cast

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: true
            timestampable: true # not needed: listeners are not enabled by default
            sortable: true


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
#    spool:     { type: memory }

# Sonata User Bundle
sonata_user:
    security_acl: true
    manager_type: orm
    class:
        user: Enmash\Bundle\UserControlBundle\Entity\User
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
#                - { position: left, type: sonata.block.service.text, settings: { content: "<h2>Welcome!</h2> This is a sample user profile dashboard, feel free to override it in the configuration! Want to make this text dynamic? For instance display the user's name? Create a dedicated block and edit the configuration!"} }
#                - { position: left, type: sonata.order.block.recent_orders, settings: { title: Recent Orders, number: 5, mode: public }}
#                - { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 15 }}
#                - { position: right, type: sonata.news.block.recent_posts, settings: { title: Recent Posts, number: 5, mode: public }}
#                - { position: right, type: sonata.news.block.recent_comments, settings: { title: Recent Comments, number: 5, mode: public }}
        # Customize user portal menu by setting links
        menu:
            - { route: 'profile-show-orders', label: 'Ваши заказы' }
#            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
#            - { route: 'sonata_customer_addresses', label: 'link_list_addresses', domain: 'SonataCustomerBundle'}
#            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
#            - { route: 'sonata_order_index', label: 'order_list', domain: 'SonataOrderBundle'}

sonata_block:
    default_contexts: [sonata_page_bundle]
    blocks:
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.block.service.text:
        sonata.seo.block.social.container:
        sonata.seo.block.email.share_button:
        sonata.seo.block.facebook.like_box:
        sonata.seo.block.facebook.like_button:
        sonata.seo.block.facebook.send_button:
        sonata.seo.block.facebook.share_button:
        sonata.seo.block.twitter.share_button:
        sonata.seo.block.twitter.follow_button:
        sonata.seo.block.twitter.hashtag_button:
        sonata.seo.block.twitter.mention_button:
        sonata.seo.block.twitter.embed:
        sonata.seo.block.pinterest.pin_button:

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
#    user_class:     Application\Sonata\UserBundle\Entity\User
    user_class: Enmash\Bundle\UserControlBundle\Entity\User

    from_email:
        address: store@enmash.ru
        sender_name: Сеть магазинов "Энергомаш"

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager

    registration:
        confirmation:
            enabled: true

sonata_admin:
#    title: Энергомаш
    title_logo: bundles/enmashpages/images/logo_energomash.png
    options:
        title_mode: single_image
    security:
        handler: sonata.admin.security.handler.role
    templates:
        layout: EnmashPagesBundle:Admin:standard_layout.html.twig
    dashboard:
        groups:
            Orders:
                label: Заказы
                items:
                    - enmash_store.admin.payment_order
            Content:
                label: Содержание
                items:
                    - enmash_pages.admin.article
                    - enmash_pages.admin.banner
                    - enmash_store.admin.special_offer
                roles: [ROLE_SITE_EDITOR]
            Stores:
                label: Магазины
                items:
                    - enmash_store.admin.store
                roles: [ROLE_SITE_EDITOR]
            Admin:
                label: Admin
                items:
                    - enmash_store.admin.payment_order
                    - enmash_store.admin.product
                    - enmash_store.admin.category
                    - enmash_store.admin.store
                    - enmash_store.admin.store_image
                    - enmash_store.admin.manufacturer
                    - enmash_store.admin.category_parameter
                    - enmash_store.admin.product_parameter
                    - enmash_store.admin.store_contact
                    - enmash_store.admin.special_offer
                    - enmash_pages.admin.banner
                    - enmash_pages.admin.article
                    - sonata.user.admin.user
                    - sonata.user.admin.group
                    - sonata.media.admin.media
                    - sonata.media.admin.gallery
                    - sonata.media.admin.gallery_has_media
                roles: [ROLE_SUPER_ADMIN]

liip_imagine:
    resolvers:
        default:
            web_path:
                web_root: %kernel.root_dir%/../web
                cache_prefix: uploads/cache

    filter_sets:
        add_watermark:
            filters:
                auto_rotate: ~
                watermark:
                    image: ../web/images/stamp.png
                    size: 0.8
                    position: bottomright
                interlace:
                    mode: line

# sonata media bundle settings
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
#                - sonata.media.provider.dailymotion
#                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        bannerinfofile:
            providers:
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        certificates:
            providers:
                - sonata.media.provider.file
                - sonata.media.provider.image

            formats:
                small: { width: 50 , quality: 70}
                big:   { width: 190 , quality: 70}

        baner:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        storeimage:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        productimage:
            providers:
                - sonata.media.provider.image
#                - sonata.media.thumbnail.liip_imagine

            formats:
                small: { width: 50 , quality: 70}
                big:   { width: 190 , quality: 70}

        articleimages:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        specialoffer:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 250 , quality: 70}
                big:   { width: 800 , quality: 70}

        contactphoto:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 250 , quality: 70}

    cdn:
        server:
            path: "%sonata_media_bundle_server_path%" # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

ivory_ck_editor:
    default_config: default
    configs:
        default:
            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: articleimages # Optional, to upload in a custom context

white_october_breadcrumbs:
    separator: '>'

knp_paginator:
    template:
        pagination: EnmashPagesBundle:Base:pagination.html.twig

sonata_seo:
    page:
        title: Электротехническая компания "Энергомаш"
        metas:
            name:
                description: Компания "Энергомаш" занимается продажей электротехнических изделий, поставкой товаров на предприятия
                keywords: Энергомаш, продажа электротехнических изделий, поставка электротоваров на предприятия
    sitemap:
        doctrine_orm:
            #main page
            -
                connection: doctrine.dbal.default_connection
                route: index-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #about page
            -
                connection: doctrine.dbal.default_connection
                route: about-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #stores page
            -
                connection: doctrine.dbal.default_connection
                route: stores-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #wholesale stores page
            -
                connection: doctrine.dbal.default_connection
                route: wholesale-stores-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #special offers page
            -
                connection: doctrine.dbal.default_connection
                route: special-offers-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #benefits page
            -
                connection: doctrine.dbal.default_connection
                route: your-benefits-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #your safety page
            -
                connection: doctrine.dbal.default_connection
                route: your-safety-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #contacts page
            -
                connection: doctrine.dbal.default_connection
                route: contacts-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #catalog page
            -
                connection: doctrine.dbal.default_connection
                route: catalog-index-page
                parameters:
                    path: null
                query: "SELECT '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority"
            #catalog categories page
            -
                connection: doctrine.dbal.default_connection
                route: catalog-category-page
                parameters:
                    slug: null
                query: "SELECT slug, '28-01-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority FROM Category"
            #catalog product page
            -
                connection: doctrine.dbal.default_connection
                route: catalog-single-item
                parameters:
                    slug: null
                    product_sku: null
                query: "SELECT Product.sku as product_sku, Category.slug as slug, '12-03-2015' as lastmod, 'weekly' as changefreq, '0.5' as priority FROM Product LEFT JOIN Category ON Category.id = Product.category_id"
